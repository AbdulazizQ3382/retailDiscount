version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: retail-discount-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: retailDiscount
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - retail-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  retail-discount-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: retail-discount-backend
    restart: unless-stopped
    environment:
      MONGODB_URI: mongodb://root:password@mongodb:27017/retailDiscount?authSource=admin&ConnectTimeoutMS=3000&maxPoolSize=20&maxIdleTimeMS=30000
      
      JWT_EXPIRATION: 86400000
      
      SERVER_PORT: 8080
      
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      
      LOGGING_LEVEL_SA_STORE_RETAILDISCOUNT: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG

      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - retail-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - app_logs:/app/logs

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: mongoexpressuser
      ME_CONFIG_BASICAUTH_PASSWORD: mongoexpresspass
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - retail-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  app_logs:
    driver: local

networks:
  retail-network:
    driver: bridge